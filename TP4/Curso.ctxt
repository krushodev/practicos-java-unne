#BlueJ class context
comment0.target=Curso
comment0.text=\r\n\ Representa\ un\ curso\ acad\u00E9mico\ que\ gestiona\ una\ n\u00F3mina\ de\ alumnos.\r\n\ Utiliza\ una\ estructura\ de\ datos\ HashMap\ para\ almacenar\ y\ acceder\ a\ los\r\n\ alumnos\ de\ forma\ eficiente\ mediante\ su\ n\u00FAmero\ de\ Libreta\ Universitaria\ (LU)\ como\ clave.\r\n\r\n\ @author\ Kruchowski,\ Juan\ Ignacio\r\n\ @version\ 1.0\r\n
comment1.params=p_nombre
comment1.target=Curso(java.lang.String)
comment1.text=\r\n\ Constructor\ que\ inicializa\ un\ curso\ con\ un\ nombre\ espec\u00EDfico\ y\ una\ n\u00F3mina\ de\ alumnos\ vac\u00EDa.\r\n\ @param\ p_nombre\ El\ nombre\ asignado\ al\ curso.\r\n
comment10.params=p_lu
comment10.target=boolean\ estaInscripto(int)
comment10.text=\r\n\ Verifica\ si\ un\ alumno\ se\ encuentra\ inscrito\ en\ el\ curso\ mediante\ su\ LU.\r\n\ @param\ p_lu\ La\ Libreta\ Universitaria\ a\ verificar.\r\n\ @return\ `true`\ si\ el\ alumno\ est\u00E1\ inscrito,\ `false`\ en\ caso\ contrario.\r\n
comment11.params=p_alumno
comment11.target=boolean\ estaInscripto(Alumno)
comment11.text=\r\n\ Verifica\ si\ un\ alumno\ espec\u00EDfico\ se\ encuentra\ inscrito\ en\ el\ curso.\r\n\ @param\ p_alumno\ El\ objeto\ Alumno\ a\ verificar.\r\n\ @return\ `true`\ si\ el\ alumno\ est\u00E1\ inscrito,\ `false`\ en\ caso\ contrario.\r\n
comment12.params=p_lu
comment12.target=Alumno\ buscarAlumno(int)
comment12.text=\r\n\ Busca\ y\ devuelve\ un\ alumno\ de\ la\ n\u00F3mina\ a\ partir\ de\ su\ LU.\r\n\ @param\ p_lu\ La\ Libreta\ Universitaria\ del\ alumno\ a\ buscar.\r\n\ @return\ El\ objeto\ Alumno\ correspondiente,\ o\ `null`\ si\ no\ se\ encuentra.\r\n
comment13.params=p_lu
comment13.target=void\ imprimirPromedioDelAlumno(int)
comment13.text=\r\n\ Imprime\ en\ consola\ el\ promedio\ y\ la\ condici\u00F3n\ acad\u00E9mica\ de\ un\ alumno.\r\n\ @param\ p_lu\ La\ Libreta\ Universitaria\ del\ alumno\ a\ consultar.\r\n
comment14.params=
comment14.target=void\ mostrarInscriptos()
comment14.text=\r\n\ Imprime\ en\ consola\ un\ listado\ con\ los\ datos\ de\ todos\ los\ alumnos\ inscritos.\r\n
comment2.params=p_nombre\ p_alumnos
comment2.target=Curso(java.lang.String,\ java.util.HashMap)
comment2.text=\r\n\ Constructor\ que\ inicializa\ un\ curso\ con\ un\ nombre\ y\ una\ n\u00F3mina\ de\ alumnos\ preexistente.\r\n\ @param\ p_nombre\ El\ nombre\ asignado\ al\ curso.\r\n\ @param\ p_alumnos\ Un\ objeto\ HashMap\ que\ contiene\ los\ alumnos\ a\ inscribir.\r\n
comment3.params=p_nombre
comment3.target=void\ setNombre(java.lang.String)
comment3.text=Asigna\ el\ nombre\ del\ curso.\ @param\ p_nombre\ Nombre\ a\ asignar.
comment4.params=p_alumnos
comment4.target=void\ setAlumnos(java.util.HashMap)
comment4.text=Asigna\ la\ colecci\u00F3n\ de\ alumnos.\ @param\ p_alumnos\ Objeto\ HashMap\ a\ asignar.
comment5.params=
comment5.target=java.lang.String\ getNombre()
comment5.text=@return\ Devuelve\ el\ nombre\ del\ curso.
comment6.params=
comment6.target=java.util.HashMap\ getAlumnos()
comment6.text=@return\ Devuelve\ la\ colecci\u00F3n\ HashMap\ de\ alumnos.
comment7.params=p_alumno
comment7.target=void\ inscribirAlumno(Alumno)
comment7.text=\r\n\ Inscribe\ un\ nuevo\ alumno\ en\ la\ n\u00F3mina\ del\ curso.\r\n\ Utiliza\ el\ LU\ del\ alumno\ como\ clave\ en\ el\ HashMap.\r\n\ @param\ p_alumno\ El\ objeto\ Alumno\ a\ ser\ inscrito.\r\n
comment8.params=p_lu
comment8.target=Alumno\ quitarAlumno(int)
comment8.text=\r\n\ Remueve\ un\ alumno\ de\ la\ n\u00F3mina\ del\ curso\ utilizando\ su\ LU.\r\n\ @param\ p_lu\ La\ Libreta\ Universitaria\ del\ alumno\ a\ remover.\r\n\ @return\ El\ objeto\ Alumno\ que\ ha\ sido\ removido,\ o\ `null`\ si\ no\ se\ encuentra.\r\n
comment9.params=
comment9.target=int\ cantidadDeAlumnos()
comment9.text=\r\n\ Devuelve\ la\ cantidad\ total\ de\ alumnos\ inscritos\ en\ el\ curso.\r\n\ @return\ Un\ valor\ entero\ que\ representa\ el\ n\u00FAmero\ de\ alumnos.\r\n
numComments=15
