#BlueJ class context
comment0.target=CajaDeAhorro
comment0.text=\r\n\ Representa\ una\ Caja\ de\ Ahorro,\ un\ tipo\ de\ cuenta\ bancaria\ con\ un\ l\u00EDmite\ de\r\n\ extracciones.\r\n\r\n\ @author\ Kruchowski,\ Juan\ Ignacio\r\n\ @version\ 1.0\r\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CajaDeAhorro(int,\ Persona)
comment1.text=\r\n\ Constructor\ para\ crear\ una\ Caja\ de\ Ahorro\ con\ saldo\ inicial\ cero\ y\ un\r\n\ l\u00EDmite\ de\ 10\ extracciones.\r\n\r\n\ @param\ p_nroCuenta\ N\u00FAmero\ de\ la\ cuenta.\r\n\ @param\ p_titular\ \ \ Objeto\ Persona\ que\ es\ titular\ de\ la\ cuenta.\r\n
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CajaDeAhorro(int,\ Persona,\ double)
comment2.text=\r\n\ Constructor\ para\ crear\ una\ Caja\ de\ Ahorro\ con\ un\ saldo\ inicial\ espec\u00EDfico\r\n\ y\ un\ l\u00EDmite\ de\ 10\ extracciones.\r\n\r\n\ @param\ p_nroCuenta\ N\u00FAmero\ de\ la\ cuenta.\r\n\ @param\ p_titular\ \ \ Objeto\ Persona\ que\ es\ titular\ de\ la\ cuenta.\r\n\ @param\ p_saldo\ \ \ \ \ Saldo\ inicial\ de\ la\ cuenta.\r\n
comment3.params=p_extraccionesPosibles
comment3.target=void\ setExtraccionesPosibles(int)
comment3.text=\r\n\ Asigna\ la\ cantidad\ de\ extracciones\ permitidas.\r\n\ *\ @param\ p_extraccionesPosibles\ Cantidad\ de\ extracciones\ a\ asignar.\r\n
comment4.params=
comment4.target=int\ getExtraccionesPosibles()
comment4.text=\r\n\ Devuelve\ la\ cantidad\ de\ extracciones\ restantes.\r\n\ *\ @return\ El\ n\u00FAmero\ de\ extracciones\ posibles.\r\n
comment5.params=p_importe
comment5.target=boolean\ puedeExtraer(double)
comment5.text=\r\n\ Eval\u00FAa\ si\ es\ posible\ realizar\ una\ extracci\u00F3n,\ considerando\ el\ saldo\ disponible\r\n\ y\ el\ l\u00EDmite\ de\ extracciones.\r\n\r\n\ @param\ p_importe\ El\ monto\ que\ se\ desea\ extraer.\r\n\ @return\ `true`\ si\ la\ extracci\u00F3n\ es\ viable,\ `false`\ en\ caso\ contrario.\r\n
comment6.params=p_importe
comment6.target=boolean\ extraer(double)
comment6.text=\r\n\ Intenta\ realizar\ una\ extracci\u00F3n\ de\ la\ cuenta.\ La\ operaci\u00F3n\ es\ exitosa\r\n\ solo\ si\ el\ importe\ es\ v\u00E1lido,\ hay\ saldo\ suficiente\ y\ quedan\ extracciones\r\n\ disponibles.\r\n\r\n\ @param\ p_importe\ El\ monto\ a\ extraer.\r\n\ @return\ `true`\ si\ la\ extracci\u00F3n\ se\ realiz\u00F3\ con\ \u00E9xito,\ `false`\ en\ caso\ contrario.\r\n
comment7.params=
comment7.target=void\ mostrar()
comment7.text=\r\n\ Imprime\ en\ consola\ un\ resumen\ detallado\ de\ la\ caja\ de\ ahorro,\ incluyendo\r\n\ su\ titular,\ saldo\ y\ extracciones\ restantes.\r\n
comment8.params=p_importe
comment8.target=java.lang.String\ xQNoPuedeExtraer(double)
comment8.text=\r\n\ Proporciona\ un\ mensaje\ explicativo\ sobre\ por\ qu\u00E9\ una\ extracci\u00F3n\ no\ pudo\r\n\ realizarse.\r\n\r\n\ @param\ p_importe\ El\ monto\ que\ se\ intent\u00F3\ extraer.\r\n\ @return\ Un\ String\ con\ el\ motivo\ del\ fallo,\ o\ una\ cadena\ vac\u00EDa\ si\ no\ hay\ error.\r\n
numComments=9
